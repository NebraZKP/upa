{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8bdEa1842afb8Be3b46d8fE8D6d110eDE057d7c7",
      "txHash": "0x4ac5613609cfff298809bad0fb96932efe96c395db4b8ac1a75d43e47e271a7d",
      "kind": "uups"
    }
  ],
  "impls": {
    "e98e66ddee724aedc00e0cbbae82b415bafddc5aedb43a1c12aaa57443c3332f": {
      "address": "0xc3bEbaD8Ac7d53B7a9F507b605e96bB03eFd86a5",
      "txHash": "0xd1a59f5e4aa048d3b7addc24081d823925bea01e2b9176b5e5b83c9631f910e9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "proofReceiver",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(UpaProofReceiver)6475",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:63"
          },
          {
            "label": "worker",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:66"
          },
          {
            "label": "feeModel",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IUpaFeeModel)2224",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:69"
          },
          {
            "label": "outerVerifier",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:72"
          },
          {
            "label": "groth16Verifier",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(IGroth16Verifier)2145",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:75"
          },
          {
            "label": "nextSubmissionIdxToVerify",
            "offset": 20,
            "slot": "4",
            "type": "t_uint64",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:79"
          },
          {
            "label": "lastVerifiedSubmissionHeight",
            "offset": 0,
            "slot": "5",
            "type": "t_uint64",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:84"
          },
          {
            "label": "openChallengeRefundAmounts",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:88"
          },
          {
            "label": "numVerifiedInSubmission",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(Uint16Vector)4463_storage",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:101"
          },
          {
            "label": "fixedReimbursement",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:106"
          },
          {
            "label": "fixedReimbursementPerProof",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "UpaVerifier",
            "src": "contracts/UpaVerifier.sol:111"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)65_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)14_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IGroth16Verifier)2145": {
            "label": "contract IGroth16Verifier",
            "numberOfBytes": "20"
          },
          "t_contract(IUpaFeeModel)2224": {
            "label": "contract IUpaFeeModel",
            "numberOfBytes": "20"
          },
          "t_contract(UpaProofReceiver)6475": {
            "label": "contract UpaProofReceiver",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Uint16Vector)4463_storage": {
            "label": "struct Uint16VectorLib.Uint16Vector",
            "members": [
              {
                "label": "entries",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
